[{"C:\\projekty\\all basic\\ab\\src\\index.js":"1","C:\\projekty\\all basic\\ab\\src\\App.js":"2","C:\\projekty\\all basic\\ab\\src\\home.jsx":"3","C:\\projekty\\all basic\\ab\\src\\Note.jsx":"4","C:\\projekty\\all basic\\ab\\src\\Memory.jsx":"5","C:\\projekty\\all basic\\ab\\src\\List.jsx":"6","C:\\projekty\\all basic\\ab\\src\\Weather.jsx":"7","C:\\projekty\\all basic\\ab\\src\\Currency.jsx":"8"},{"size":221,"mtime":1610799741922,"results":"9","hashOfConfig":"10"},{"size":868,"mtime":1611334882704,"results":"11","hashOfConfig":"10"},{"size":1904,"mtime":1611532201698,"results":"12","hashOfConfig":"10"},{"size":2081,"mtime":1610827169558,"results":"13","hashOfConfig":"10"},{"size":3838,"mtime":1611170281700,"results":"14","hashOfConfig":"10"},{"size":4068,"mtime":1611165655354,"results":"15","hashOfConfig":"10"},{"size":2183,"mtime":1611165221871,"results":"16","hashOfConfig":"10"},{"size":2545,"mtime":1611345407389,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"msjmkx",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":2,"source":"38","usedDeprecatedRules":"20"},"C:\\projekty\\all basic\\ab\\src\\index.js",[],["39","40"],"C:\\projekty\\all basic\\ab\\src\\App.js",["41"],"\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink\n} from \"react-router-dom\";\nimport Home from './home'\nimport Note from './Note'\nimport Memory from './Memory'\nimport List from './List'\nimport Weather from './Weather'\nimport Currency from './Currency'\n\nfunction App() {\n  return (\n    <Router>\n        <header>\n        <NavLink  to = '/'> <h1>All Basic</h1></NavLink>\n        </header>\n     <section className = 'page'>\n      <Route exact path  = '/' component = {Home}/>\n      <Route exact path = '/note' component = {Note}/>\n      <Route exact path = '/memory' component = {Memory}/>\n      <Route exact path = '/list' component = {List}/>\n      <Route exact path = '/weather' component = {Weather}/>\n      <Route exact path = '/currency' component = {Currency}/>\n     </section>\n\n    </Router>\n        \n  );\n}\n\nexport default App;\n","C:\\projekty\\all basic\\ab\\src\\home.jsx",["42","43","44"],"C:\\projekty\\all basic\\ab\\src\\Note.jsx",[],"C:\\projekty\\all basic\\ab\\src\\Memory.jsx",["45"],"import React, {useState, useEffect} from 'react'\r\nimport './styles/memory.css'\r\n\r\nfunction shuffle(a) {\r\n    var j, x, i;\r\n    for (i = a.length - 1; i > 0; i--) {\r\n        j = Math.floor(Math.random() * (i + 1));\r\n        x = a[i];\r\n        a[i] = a[j];\r\n        a[j] = x;\r\n    }\r\n    return a;\r\n}\r\n\r\nexport default function Memory() {\r\n    const [memos, setMemos] = useState()\r\n\r\n    useEffect(() => {\r\n       const arr = shuffle(['red', 'red', 'grey', 'grey', 'green', 'green', 'pink', 'pink', 'yellow', 'yellow', 'brown', 'brown'])\r\n       const state = [\r\n        {id: 1, type: arr[0], live: true},\r\n        {id: 2, type: arr[1], live: true},\r\n        {id: 3, type: arr[2], live: true},\r\n        {id: 4, type: arr[3], live: true},\r\n        {id: 5, type: arr[4], live: true},\r\n        {id: 6, type: arr[5], live: true},\r\n        {id: 7, type: arr[6], live: true},\r\n        {id: 8, type: arr[7], live: true},\r\n        {id: 9, type: arr[8], live: true},\r\n        {id: 10, type: arr[9], live: true},\r\n        {id: 11, type: arr[10], live: true},\r\n        {id: 12, type: arr[11], live: true}  \r\n    ]\r\n    setMemos(state)\r\n    }, [])\r\n    \r\n    const [player, setPlayer] = useState([]) \r\n    useEffect(() => {\r\n       \r\n        if(player.length === 2) {\r\n            setTimeout(() => {\r\n                if(player[0].type === player[1].type) {\r\n                  \r\n                    setPlayer([])\r\n            }\r\n            else {\r\n                const exPlayer = [...player]\r\n                const firstUp = [...memos].findIndex(item => exPlayer[0] === item)\r\n                const secondUp = [...memos].findIndex(item => exPlayer[1] === item)\r\n                const MemosReplica = [...memos]\r\n                MemosReplica[firstUp].live = true\r\n                MemosReplica[secondUp].live = true\r\n                \r\n                setMemos(MemosReplica)\r\n                setPlayer([])\r\n            }\r\n            if(!memos[0].live && !memos[1].live && !memos[2].live && !memos[3].live && !memos[4].live && !memos[5].live && !memos[6].live && !memos[7].live && !memos[8].live && !memos[9].live && !memos[10].live && !memos[11].live) {\r\n                const arr = shuffle(['red', 'red', 'grey', 'grey', 'green', 'green', 'pink', 'pink', 'yellow', 'yellow', 'brown', 'brown'])\r\n                const state = [\r\n                 {id: 1, type: arr[0], live: true},\r\n                 {id: 2, type: arr[1], live: true},\r\n                 {id: 3, type: arr[2], live: true},\r\n                 {id: 4, type: arr[3], live: true},\r\n                 {id: 5, type: arr[4], live: true},\r\n                 {id: 6, type: arr[5], live: true},\r\n                 {id: 7, type: arr[6], live: true},\r\n                 {id: 8, type: arr[7], live: true},\r\n                 {id: 9, type: arr[8], live: true},\r\n                 {id: 10, type: arr[9], live: true},\r\n                 {id: 11, type: arr[10], live: true},\r\n                 {id: 12, type: arr[11], live: true}  \r\n             ]\r\n             setMemos(state)\r\n            } \r\n            }, 2000)\r\n      \r\n     \r\n    }\r\n \r\n    }, [player])\r\n    const handleClick = (id, e) => {\r\n        if(player.length === 2) return alert('poczekaj')\r\n        const curr = [...memos].find(item => item.id === id)\r\n        const memoId = [...memos].findIndex(item => item === curr)\r\n        const newMemos = [...memos]\r\n       \r\n\r\n    \r\n\r\n        if( newMemos[memoId].live === false) return alert('asdasd')\r\n        newMemos[memoId].live = false\r\n     \r\n        setPlayer([...player, curr])\r\n      \r\n        setMemos(newMemos)\r\n\r\n  \r\n}\r\n    const list = memos && memos.map(item => <div className=\"memo\"  style = {!item.live ? {backgroundColor: item.type} : null} onClick = {handleClick.bind(this, item.id)}></div>)\r\n    return (\r\n        <div className = 'allMemo'>\r\n            {list}\r\n        </div>\r\n    )\r\n}\r\n","C:\\projekty\\all basic\\ab\\src\\List.jsx",[],"C:\\projekty\\all basic\\ab\\src\\Weather.jsx",["46","47"],"import React, {useRef, useState} from 'react'\r\nimport './styles/memory.css'\r\n\r\nexport default function Weather() {\r\n    const [weather, setWeather] = useState(null)\r\n   \r\n    const inputRef = useRef()\r\n    const handleSub = (e) => {\r\n        e.preventDefault()\r\n        fetch(\"http://api.weatherstack.com/current?access_key=c307c891b6d75c50fcbab7c2b6174080&query=\" + inputRef.current.value).\r\n        then(response => response.json()).\r\n        then(data => {\r\n            if(!data.current) return alert('Brak takiego miasta')\r\n            setWeather(data)\r\n        })\r\n    \r\n       \r\n    }\r\n  \r\n\r\n     return (\r\n\r\n        <div className = 'weatherCont'>\r\n        {\r\n            weather\r\n             ?\r\n          \r\n                  <div style = {weather.current.is_day === \"yes\" ? {backgroundColor: \"rgb(150, 181, 228)\"} : {backgroundColor: \"rgb(60, 74, 145)\", color: \"rgb(185, 203, 230)\"}} className=\"currWeather\">\r\n                <h1 className = 'city'>{weather.location.name}</h1>\r\n               <h2>{weather.location.localtime}</h2>\r\n               \r\n                <img src={weather.current.weather_icons[0]} alt=\"\"/>\r\n                <h1 className = 'des'>{weather.current.weather_descriptions}</h1>\r\n                <h1 className = \"stopnie\">{weather.current.temperature}â„ƒ</h1>\r\n\r\n                <div className=\"info\">\r\n                    <h3>pressure: {weather.current.pressure}</h3>\r\n                    <h3>wind speed: {weather.current.wind_speed}km/h</h3>\r\n                        \r\n                </div>\r\n                <button className = \"newWeather\" onClick = {() => setWeather(null)} style = {weather.current.is_day === \"yes\" ? {backgroundColor: \"black\", color: \"rgb(150, 181, 228)\"} : {backgroundColor: \"rgb(185, 203, 230)\", color: \"rgb(60, 74, 145)\"}}>Check another city</button>\r\n               </div>\r\n       \r\n            :\r\n            <div className = 'inputWrapWeather'>\r\n            <h1 className = 'cityInput'>Wpisz Miasto</h1>\r\n            <form onSubmit = {handleSub}>\r\n                <input ref = {inputRef} type=\"text\"/>\r\n                <button>Szukaj</button>\r\n            </form>\r\n            </div>\r\n        }\r\n        </div>\r\n    )\r\n}\r\n","C:\\projekty\\all basic\\ab\\src\\Currency.jsx",["48","49","50","51","52","53","54","55","56","57"],"import React, {useEffect, useState, useRef} from 'react'\r\nimport './styles/memory.css'\r\n\r\nconst API = \"http://data.fixer.io/api/latest?access_key=822ad430a66db6799703df803cc46ab8\"\r\n\r\nexport default function Currency() {\r\n\r\n    const [currency, setCurrency] = useState(null)\r\n    const [vis, setVis] = useState(null)\r\n   const [chose, setChose] = useState({one: '', two: ''})\r\n    const [error, setError] = useState(false)\r\n    const [res, setRes] = useState(0)\r\n   \r\n \r\n    const inpRef = useRef()\r\n    const inpRefDwa = useRef()\r\n    const moneyInput = useRef()\r\n    useEffect(() => {\r\n        fetch(API).then(response => response.json()).then(data => setCurrency(data.rates))\r\n      \r\n    })\r\n\r\n\r\n    const handleWrite = (name) => {\r\n       if(name === 'one') {\r\n      setVis(\r\n        currency && Object.getOwnPropertyNames(currency).filter(item => item.includes(inpRef.current.value.toUpperCase())).\r\n        map(item =>  <h1>{item}</h1>)\r\n      )\r\n       }\r\n       if(name === 'two') {\r\n        setVis(\r\n          currency && Object.getOwnPropertyNames(currency).filter(item => item.includes(inpRefDwa.current.value.toUpperCase())).\r\n          map(item =>  <h1>{item}</h1>)\r\n        )\r\n         }\r\n       \r\n    }\r\n   const counter = () => {\r\n       if(!Object.getOwnPropertyNames(currency).includes(inpRefDwa.current.value.toUpperCase() || inpRef.current.value.toUpperCase())) return setError(\"bÅ‚Ä™dna waluta\")\r\n       const stringOne = inpRef.current.value\r\n       const stringTwo = inpRefDwa.current.value\r\n       const z = currency.stringOne\r\n       const na = currency.stringTwo\r\n\r\n      setError(\"It seems this API wants me to pay for exact currency and i dont have money for this. My apologies\")\r\n\r\n     \r\n\r\n   }\r\n\r\n   \r\n      \r\n    return (\r\n        <div className=\"currencyCont\">\r\n            <div className=\"ustawienie\">\r\n                <div>\r\n            <h1>Z:</h1>\r\n            <input ref = {inpRef} onChange = {handleWrite.bind(this, 'one')} onBlur = {() => setVis(null)} type=\"text\"/>\r\n            </div>\r\n            <div>   <h1>Kwota</h1>\r\n            <input ref = {moneyInput} onChange = {counter} type=\"number\"/></div>\r\n            <div>\r\n            <h1>NA:</h1>\r\n            <input ref = {inpRefDwa} onChange = {handleWrite.bind(this, 'two')} onBlur = {() => setVis(null)} type=\"text\"/>\r\n            </div>\r\n\r\n            </div>\r\n            {error && <h2>{error}</h2>}\r\n            <div className = 'wyniki'>\r\n            {currency && vis}\r\n            \r\n            </div>\r\n           \r\n        </div>\r\n \r\n    )\r\n}\r\n",{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":5,"column":3,"nodeType":"64","messageId":"65","endLine":5,"endColumn":9},{"ruleId":"62","severity":1,"message":"66","line":3,"column":22,"nodeType":"64","messageId":"65","endLine":3,"endColumn":28},{"ruleId":"62","severity":1,"message":"63","line":4,"column":5,"nodeType":"64","messageId":"65","endLine":4,"endColumn":11},{"ruleId":"62","severity":1,"message":"67","line":5,"column":5,"nodeType":"64","messageId":"65","endLine":5,"endColumn":10},{"ruleId":"68","severity":1,"message":"69","line":80,"column":8,"nodeType":"70","endLine":80,"endColumn":16,"suggestions":"71"},{"ruleId":"72","severity":1,"message":"73","line":10,"column":129,"nodeType":"74","messageId":"75","endLine":10,"endColumn":130,"fix":"76"},{"ruleId":"72","severity":1,"message":"73","line":11,"column":42,"nodeType":"74","messageId":"75","endLine":11,"endColumn":43,"fix":"77"},{"ruleId":"62","severity":1,"message":"78","line":10,"column":11,"nodeType":"64","messageId":"65","endLine":10,"endColumn":16},{"ruleId":"62","severity":1,"message":"79","line":10,"column":18,"nodeType":"64","messageId":"65","endLine":10,"endColumn":26},{"ruleId":"62","severity":1,"message":"80","line":12,"column":12,"nodeType":"64","messageId":"65","endLine":12,"endColumn":15},{"ruleId":"62","severity":1,"message":"81","line":12,"column":17,"nodeType":"64","messageId":"65","endLine":12,"endColumn":23},{"ruleId":"72","severity":1,"message":"73","line":27,"column":123,"nodeType":"74","messageId":"75","endLine":27,"endColumn":124,"fix":"82"},{"ruleId":"72","severity":1,"message":"73","line":33,"column":128,"nodeType":"74","messageId":"75","endLine":33,"endColumn":129,"fix":"83"},{"ruleId":"62","severity":1,"message":"84","line":41,"column":14,"nodeType":"64","messageId":"65","endLine":41,"endColumn":23},{"ruleId":"62","severity":1,"message":"85","line":42,"column":14,"nodeType":"64","messageId":"65","endLine":42,"endColumn":23},{"ruleId":"62","severity":1,"message":"86","line":43,"column":14,"nodeType":"64","messageId":"65","endLine":43,"endColumn":15},{"ruleId":"62","severity":1,"message":"87","line":44,"column":14,"nodeType":"64","messageId":"65","endLine":44,"endColumn":16},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Route' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'memos'. Either include it or remove the dependency array.","ArrayExpression",["90"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"91","text":"92"},{"range":"93","text":"92"},"'chose' is assigned a value but never used.","'setChose' is assigned a value but never used.","'res' is assigned a value but never used.","'setRes' is assigned a value but never used.",{"range":"94","text":"92"},{"range":"95","text":"96"},"'stringOne' is assigned a value but never used.","'stringTwo' is assigned a value but never used.","'z' is assigned a value but never used.","'na' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},[390,401],"\r\n        .",[434,445],[902,913],[1136,1149],"\r\n          .","Update the dependencies array to be: [memos, player]",{"range":"99","text":"100"},[3071,3079],"[memos, player]"]